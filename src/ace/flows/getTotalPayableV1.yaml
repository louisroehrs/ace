tags:
  - Policy
sampleInputSchema: ""
sampleData:
  policy_id: integer
  claim_id: integer
  claimCover:
    type: array
    items:
      properties:
        finalAmount:
          type: integer
      type: object
      required: []
  claimFundSurrender:
    type: array
    items:
      properties:
        amountToBePaid:
          type: integer
      type: object
  claimAdditionalAmount:
    type: array
    items:
      properties:
        finalAmount:
          type: integer
      type: object
  claimRefund:
    type: array
    items:
      properties:
        amountToBePaid:
          type: integer
      type: object
description: Created by imported openApi schema
steps:
  - name: JSONATA MAP
    stepType: jsonata
    condition: ""
    config:
      maps:
        - jsonata: $
          targetPath: requestBody
    description: mapping request body
  - name: AJV
    stepType: ajv
    condition: ""
    config:
      dataPath: requestBody
      schema:
        claimCover:
          type: array
          items:
            properties:
              finalAmount:
                type: integer
            type: object
            required: []
        claimFundSurrender:
          type: array
          items:
            properties:
              amountToBePaid:
                type: integer
            type: object
        claimAdditionalAmount:
          type: array
          items:
            properties:
              finalAmount:
                type: integer
            type: object
        claimRefund:
          type: array
          items:
            properties:
              amountToBePaid:
                type: integer
            type: object
      targetPath: validations
      error: true
    description: validating request body
  - name: REST
    stepType: rest-new
    condition: "{{validations && validations.length === 0}}"
    config:
      endpoint:
        url: "{{$env.DYNAMIC_APIS_URL}}/policies/{{policy_id}}/claims/{{claim_id}}/total-payable"
        method: POST
      restRequest: JSON
      json: "{{requestBody}}"
      queryParams: {}
      headers:
        coresuite-datasource-key: "{{$headers.coresuite-datasource-key}}"
        coresuite-user-name: "{{$headers.coresuite-user-name}}"
      targetPath: result
    description: ""
